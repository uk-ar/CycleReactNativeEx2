// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Book with full book 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "backgroundColor": "#fafafa",
          "flexDirection": "row",
        }
      }
    >
      <Image
        resizeMode="contain"
        source={
          Object {
            "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
          }
        }
        style={
          Object {
            "backgroundColor": "#dddddd",
            "height": 64,
            "margin": 10,
            "width": 64,
          }
        }
      />
      <View
        style={
          Object {
            "borderBottomWidth": 0.5,
            "borderColor": "rgba(0, 0, 0, 0.1)",
            "borderTopWidth": 0.5,
            "flex": 1,
            "marginRight": 10,
            "padding": 5,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            numberOfLines={2}
            style={
              Object {
                "flex": 1,
                "fontSize": 16,
                "fontWeight": "500",
              }
            }
          >
            guri & gura & can I handle long long long title?
          </Text>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Object {
              "color": "#9E9E9E",
              "fontSize": 12,
            }
          }
        >
          author foo
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Book with short title 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "backgroundColor": "#fafafa",
          "flexDirection": "row",
        }
      }
    >
      <Image
        resizeMode="contain"
        source={
          Object {
            "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
          }
        }
        style={
          Object {
            "backgroundColor": "#dddddd",
            "height": 64,
            "margin": 10,
            "width": 64,
          }
        }
      />
      <View
        style={
          Object {
            "borderBottomWidth": 0.5,
            "borderColor": "rgba(0, 0, 0, 0.1)",
            "borderTopWidth": 0.5,
            "flex": 1,
            "marginRight": 10,
            "padding": 5,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 20,
                },
                Object {
                  "color": "#03a9f4",
                  "marginRight": 10,
                },
                Object {
                  "fontFamily": "awesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            numberOfLines={2}
            style={
              Object {
                "flex": 1,
                "fontSize": 16,
                "fontWeight": "500",
              }
            }
          >
            guri & gura
          </Text>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Object {
              "color": "#9E9E9E",
              "fontSize": 12,
            }
          }
        >
          author foo
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#4CAF50",
              }
            }
          >
            貸出可
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots Book with thumbnail 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "backgroundColor": "#fafafa",
          "flexDirection": "row",
        }
      }
    >
      <Image
        resizeMode="contain"
        source={
          Object {
            "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
          }
        }
        style={
          Object {
            "backgroundColor": "#dddddd",
            "height": 64,
            "margin": 10,
            "width": 64,
          }
        }
      />
      <View
        style={
          Object {
            "borderBottomWidth": 0.5,
            "borderColor": "rgba(0, 0, 0, 0.1)",
            "borderTopWidth": 0.5,
            "flex": 1,
            "marginRight": 10,
            "padding": 5,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            numberOfLines={2}
            style={
              Object {
                "flex": 1,
                "fontSize": 16,
                "fontWeight": "500",
              }
            }
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Object {
              "color": "#9E9E9E",
              "fontSize": 12,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots BookList with many 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "author": "author foo",
          "bucket": "liked",
          "isbn": "9784834032147",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
          "title": "guri & gura",
        },
        Object {
          "author": "仲田利津子/黒田昌代",
          "bucket": "done",
          "isbn": "9784828867472",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/7472/9784828867472.jpg?_ex=200x200",
          "title": "はじめてのABCえほん",
        },
        Object {
          "author": "中川李枝子/大村百合子",
          "bucket": "borrowed",
          "isbn": "9784834000825",
          "reserveUrl": "http://api.calil.jp/reserve?id=af299d780fe86cf8b116dfda4725dc0f",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/0825/9784834000825.jpg?_ex=200x200",
          "title": "ぐりとぐら(複数蔵書)",
        },
        Object {
          "author": "中川李枝子/山脇百合子（絵本作家）",
          "bucket": "search",
          "isbn": "9784834014655",
          "reserveUrl": "https://www.amazon.co.jp/dp/4834014657",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/4655/9784834014655.jpg?_ex=200x200",
          "title": "ぐりとぐらの1ねんかん(単一蔵書)",
        },
        Object {
          "author": "坂本貴史",
          "isbn": "9784862463241",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/3241/9784862463241.jpg?_ex=200x200",
          "title": "IA／UXプラクティス",
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "9784828867472": Object {
          "status": "onLoan",
        },
        "9784834000825": Object {
          "status": "noCollection",
        },
        "9784834014655": Object {
          "status": "Loading",
        },
        "9784834032147": Object {
          "status": "rentable",
        },
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={undefined}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 20,
                        },
                        Object {
                          "color": "#03a9f4",
                          "marginRight": 10,
                        },
                        Object {
                          "fontFamily": "awesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    guri & gura
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  author foo
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "color": "#4CAF50",
                      }
                    }
                  >
                    貸出可
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/7472/9784828867472.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 20,
                        },
                        Object {
                          "color": "#ffc107",
                          "marginRight": 10,
                        },
                        Object {
                          "fontFamily": "awesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    はじめてのABCえほん
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  仲田利津子/黒田昌代
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "color": "#FFC107",
                      }
                    }
                  >
                    貸出中
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/0825/9784834000825.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 20,
                        },
                        Object {
                          "color": "#4caf50",
                          "marginRight": 10,
                        },
                        Object {
                          "fontFamily": "awesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    ぐりとぐら(複数蔵書)
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  中川李枝子/大村百合子
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "color": "#F44336",
                      }
                    }
                  >
                    蔵書なし
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/4655/9784834014655.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 20,
                        },
                        Object {
                          "color": undefined,
                          "marginRight": 10,
                        },
                        Object {
                          "fontFamily": "awesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    ぐりとぐらの1ねんかん(単一蔵書)
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  中川李枝子/山脇百合子（絵本作家）
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={undefined}
                  >
                    蔵書確認中
                  </Text>
                  <ActivityIndicator
                    animating={true}
                    color="#999999"
                    hidesWhenStopped={true}
                    size="small"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/3241/9784862463241.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    IA／UXプラクティス
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  坂本貴史
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={undefined}
                  >
                    蔵書確認中
                  </Text>
                  <ActivityIndicator
                    animating={true}
                    color="#999999"
                    hidesWhenStopped={true}
                    size="small"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Storyshots BookList with one 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "author": "author foo",
          "isbn": "9784834032147",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
          "title": "guri & gura",
        },
      ]
    }
    disableVirtualization={false}
    extraData={undefined}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={undefined}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    guri & gura
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  author foo
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={undefined}
                  >
                    蔵書確認中
                  </Text>
                  <ActivityIndicator
                    animating={true}
                    color="#999999"
                    hidesWhenStopped={true}
                    size="small"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Storyshots BookList with two 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "author": "author foo",
          "isbn": "9784834032147",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
          "title": "guri & gura",
        },
        Object {
          "author": "仲田利津子/黒田昌代",
          "isbn": "9784828867472",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/7472/9784828867472.jpg?_ex=200x200",
          "title": "はじめてのABCえほん",
        },
      ]
    }
    disableVirtualization={false}
    extraData={undefined}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={undefined}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    guri & gura
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  author foo
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={undefined}
                  >
                    蔵書確認中
                  </Text>
                  <ActivityIndicator
                    animating={true}
                    color="#999999"
                    hidesWhenStopped={true}
                    size="small"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/7472/9784828867472.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    はじめてのABCえほん
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  仲田利津子/黒田昌代
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={undefined}
                  >
                    蔵書確認中
                  </Text>
                  <ActivityIndicator
                    animating={true}
                    color="#999999"
                    hidesWhenStopped={true}
                    size="small"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Storyshots Browser with full book 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Object {
        "backgroundColor": "#fafafa",
        "flexDirection": "row",
      }
    }
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/0825/9784834000825.jpg?_ex=200x200",
        }
      }
      style={
        Object {
          "backgroundColor": "#dddddd",
          "height": 64,
          "margin": 10,
          "width": 64,
        }
      }
    />
    <View
      style={
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "rgba(0, 0, 0, 0.1)",
          "borderTopWidth": 0.5,
          "flex": 1,
          "marginRight": 10,
          "padding": 5,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 20,
              },
              Object {
                "color": "#ffc107",
                "marginRight": 10,
              },
              Object {
                "fontFamily": "awesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          numberOfLines={2}
          style={
            Object {
              "flex": 1,
              "fontSize": 16,
              "fontWeight": "500",
            }
          }
        >
          ぐりとぐら(複数蔵書)
        </Text>
      </View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={1}
        style={
          Object {
            "color": "#9E9E9E",
            "fontSize": 12,
          }
        }
      >
        中川李枝子/大村百合子
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Closeable with open and close 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    onPress={[Function]}
    style={
      Object {
        "alignSelf": "center",
      }
    }
  >
    pressMe
  </Text>
  <View>
    <View
      style={
        Array [
          Object {
            "height": 83,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "red",
            "height": 50,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Filter with 3 items 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#f5f5f5",
        "borderColor": "#e3e3e3",
        "borderRadius": 3,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "marginBottom": 5,
        "marginLeft": 10,
        "marginRight": 10,
        "marginTop": 5,
        "overflow": "hidden",
      },
      Object {
        "height": 30,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "borderRightColor": "#bdc6cf",
            "borderRightWidth": 0,
          },
          false,
          false,
          Object {
            "borderBottomLeftRadius": 3,
            "borderTopLeftRadius": 3,
          },
          false,
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#5e6977",
                "fontSize": 16.25,
                "fontWeight": "500",
              },
              undefined,
              false,
              false,
            ],
          ]
        }
      >
        全て
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "borderRightColor": "#bdc6cf",
            "borderRightWidth": 1,
          },
          Object {
            "borderLeftColor": "#bdc6cf",
            "borderLeftWidth": 1,
          },
          false,
          false,
          false,
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#5e6977",
                "fontSize": 16.25,
                "fontWeight": "500",
              },
              undefined,
              false,
              false,
            ],
          ]
        }
      >
        蔵書あり
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "flex": 1,
          },
          false,
          false,
          Object {
            "borderBottomRightRadius": 3,
            "borderTopRightRadius": 3,
          },
          false,
          Object {
            "backgroundColor": "white",
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#5e6977",
                "fontSize": 16.25,
                "fontWeight": "500",
              },
              undefined,
              Object {
                "color": "#43484d",
              },
              undefined,
            ],
          ]
        }
      >
        貸出可
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Filter with 3 items no state 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#f5f5f5",
        "borderColor": "#e3e3e3",
        "borderRadius": 3,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "marginBottom": 5,
        "marginLeft": 10,
        "marginRight": 10,
        "marginTop": 5,
        "overflow": "hidden",
      },
      Object {
        "height": 30,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "borderRightColor": "#bdc6cf",
            "borderRightWidth": 0,
          },
          false,
          false,
          Object {
            "borderBottomLeftRadius": 3,
            "borderTopLeftRadius": 3,
          },
          Object {
            "backgroundColor": "white",
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#5e6977",
                "fontSize": 16.25,
                "fontWeight": "500",
              },
              undefined,
              Object {
                "color": "#43484d",
              },
              undefined,
            ],
          ]
        }
      >
        全て
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "borderRightColor": "#bdc6cf",
            "borderRightWidth": 1,
          },
          Object {
            "borderLeftColor": "#bdc6cf",
            "borderLeftWidth": 1,
          },
          false,
          false,
          false,
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#5e6977",
                "fontSize": 16.25,
                "fontWeight": "500",
              },
              undefined,
              false,
              false,
            ],
          ]
        }
      >
        蔵書あり
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "flex": 1,
          },
          false,
          false,
          Object {
            "borderBottomRightRadius": 3,
            "borderTopRightRadius": 3,
          },
          false,
          false,
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#5e6977",
                "fontSize": 16.25,
                "fontWeight": "500",
              },
              undefined,
              false,
              false,
            ],
          ]
        }
      >
        貸出可
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Filter with open and close 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    onPress={[Function]}
    style={
      Object {
        "alignSelf": "center",
      }
    }
  >
    pressMe
  </Text>
  <RCTScrollView
    data={
      Array [
        Object {
          "author": "author foo",
          "bucket": "liked",
          "isbn": "9784834032147",
          "status": "rentable",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
          "title": "guri & gura",
        },
        Object {
          "author": "仲田利津子/黒田昌代",
          "bucket": "done",
          "isbn": "9784828867472",
          "status": "onLoan",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/7472/9784828867472.jpg?_ex=200x200",
          "title": "はじめてのABCえほん",
        },
        Object {
          "author": "中川李枝子/大村百合子",
          "bucket": "borrowed",
          "isbn": "9784834000825",
          "reserveUrl": "http://api.calil.jp/reserve?id=af299d780fe86cf8b116dfda4725dc0f",
          "status": "noCollection",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/0825/9784834000825.jpg?_ex=200x200",
          "title": "ぐりとぐら(複数蔵書)",
        },
        Object {
          "author": "中川李枝子/山脇百合子（絵本作家）",
          "bucket": "search",
          "isbn": "9784834014655",
          "reserveUrl": "https://www.amazon.co.jp/dp/4834014657",
          "status": "Loading",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/4655/9784834014655.jpg?_ex=200x200",
          "title": "ぐりとぐらの1ねんかん(単一蔵書)",
        },
        Object {
          "author": "坂本貴史",
          "isbn": "9784862463241",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/3241/9784862463241.jpg?_ex=200x200",
          "title": "IA／UXプラクティス",
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "9784828867472": Object {
          "status": "onLoan",
        },
        "9784834000825": Object {
          "status": "noCollection",
        },
        "9784834014655": Object {
          "status": "Loading",
        },
        "9784834032147": Object {
          "status": "rentable",
        },
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={undefined}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 20,
                        },
                        Object {
                          "color": "#03a9f4",
                          "marginRight": 10,
                        },
                        Object {
                          "fontFamily": "awesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    guri & gura
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  author foo
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "color": "#4CAF50",
                      }
                    }
                  >
                    貸出可
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/7472/9784828867472.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 20,
                        },
                        Object {
                          "color": "#ffc107",
                          "marginRight": 10,
                        },
                        Object {
                          "fontFamily": "awesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    はじめてのABCえほん
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  仲田利津子/黒田昌代
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "color": "#FFC107",
                      }
                    }
                  >
                    貸出中
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/0825/9784834000825.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 20,
                        },
                        Object {
                          "color": "#4caf50",
                          "marginRight": 10,
                        },
                        Object {
                          "fontFamily": "awesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    ぐりとぐら(複数蔵書)
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  中川李枝子/大村百合子
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "color": "#F44336",
                      }
                    }
                  >
                    蔵書なし
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/4655/9784834014655.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 20,
                        },
                        Object {
                          "color": undefined,
                          "marginRight": 10,
                        },
                        Object {
                          "fontFamily": "awesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    ぐりとぐらの1ねんかん(単一蔵書)
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  中川李枝子/山脇百合子（絵本作家）
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={undefined}
                  >
                    蔵書確認中
                  </Text>
                  <ActivityIndicator
                    animating={true}
                    color="#999999"
                    hidesWhenStopped={true}
                    size="small"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/3241/9784862463241.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    IA／UXプラクティス
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  坂本貴史
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={undefined}
                  >
                    蔵書確認中
                  </Text>
                  <ActivityIndicator
                    animating={true}
                    color="#999999"
                    hidesWhenStopped={true}
                    size="small"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Storyshots FlatList with three 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": "a",
          "title": "foo",
        },
        Object {
          "id": "b",
          "title": "bar",
        },
        Object {
          "id": "c",
          "title": "baz",
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "selected": Map {},
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "black",
                }
              }
            >
              foo
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "black",
                }
              }
            >
              bar
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "black",
                }
              }
            >
              baz
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Storyshots Library with plane 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Object {
        "backgroundColor": "#fafafa",
        "flexDirection": "row",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 20,
          },
          Object {
            "alignSelf": "center",
            "margin": 10,
          },
          Object {
            "fontFamily": "awesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
    <View
      style={
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "rgba(0, 0, 0, 0.1)",
          "flex": 1,
          "padding": 5,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={2}
        style={
          Object {
            "fontSize": 16,
            "fontWeight": "500",
          }
        }
      >
        foo
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={1}
        style={
          Object {
            "color": "#9E9E9E",
            "fontSize": 12,
          }
        }
      >
        bar
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots LibraryList with plane 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "subtitle": "bar",
        "title": "foo",
      },
      Object {
        "subtitle": "bal",
        "title": "baz",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Object {
              "backgroundColor": "#fafafa",
              "flexDirection": "row",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 20,
                },
                Object {
                  "alignSelf": "center",
                  "margin": 10,
                },
                Object {
                  "fontFamily": "awesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
          <View
            style={
              Object {
                "borderBottomWidth": 0.5,
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "flex": 1,
                "padding": 5,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={2}
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "500",
                }
              }
            >
              foo
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Object {
                  "color": "#9E9E9E",
                  "fontSize": 12,
                }
              }
            >
              bar
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Object {
              "backgroundColor": "#fafafa",
              "flexDirection": "row",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 20,
                },
                Object {
                  "alignSelf": "center",
                  "margin": 10,
                },
                Object {
                  "fontFamily": "awesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
          <View
            style={
              Object {
                "borderBottomWidth": 0.5,
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "flex": 1,
                "padding": 5,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={2}
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "500",
                }
              }
            >
              baz
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Object {
                  "color": "#9E9E9E",
                  "fontSize": 12,
                }
              }
            >
              bal
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots LibrarySearchScene with plane 1`] = `
<View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#393e42",
          "borderBottomColor": "#000",
          "borderBottomWidth": 1,
          "borderTopColor": "#000",
          "borderTopWidth": 1,
        },
        Object {
          "backgroundColor": "#e1e8ee",
          "borderBottomColor": "#e1e1e1",
          "borderTopColor": "#e1e1e1",
        },
        Object {
          "backgroundColor": "#fafafa",
          "flex": 1,
        },
      ]
    }
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={undefined}
      placeholder="Type Here..."
      placeholderTextColor="#86939e"
      style={
        Array [
          Object {
            "backgroundColor": "#303337",
            "borderRadius": 3,
            "color": "#86939e",
            "fontSize": 17.5,
            "height": 30,
            "margin": 8,
            "overflow": "hidden",
            "paddingLeft": 26,
            "paddingRight": 19,
          },
          Object {
            "backgroundColor": "#bdc6cf",
          },
          false,
          false,
          Object {
            "backgroundColor": "#eeeeee",
          },
          undefined,
          false,
        ]
      }
      underlineColorAndroid="transparent"
    />
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#86939e",
            "fontSize": 16,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
              "position": "absolute",
              "top": 15.5,
            },
            Object {
              "left": 16,
            },
            undefined,
          ],
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "subtitle": "bar",
          "title": "foo",
        },
        Object {
          "subtitle": "bal",
          "title": "baz",
        },
        Object {
          "subtitle": "bb",
          "title": "aa",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "backgroundColor": "#fafafa",
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 20,
                  },
                  Object {
                    "alignSelf": "center",
                    "margin": 10,
                  },
                  Object {
                    "fontFamily": "awesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
            <View
              style={
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "rgba(0, 0, 0, 0.1)",
                  "flex": 1,
                  "padding": 5,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={2}
                style={
                  Object {
                    "fontSize": 16,
                    "fontWeight": "500",
                  }
                }
              >
                foo
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "color": "#9E9E9E",
                    "fontSize": 12,
                  }
                }
              >
                bar
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "backgroundColor": "#fafafa",
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 20,
                  },
                  Object {
                    "alignSelf": "center",
                    "margin": 10,
                  },
                  Object {
                    "fontFamily": "awesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
            <View
              style={
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "rgba(0, 0, 0, 0.1)",
                  "flex": 1,
                  "padding": 5,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={2}
                style={
                  Object {
                    "fontSize": 16,
                    "fontWeight": "500",
                  }
                }
              >
                baz
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "color": "#9E9E9E",
                    "fontSize": 12,
                  }
                }
              >
                bal
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "backgroundColor": "#fafafa",
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 20,
                  },
                  Object {
                    "alignSelf": "center",
                    "margin": 10,
                  },
                  Object {
                    "fontFamily": "awesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
            <View
              style={
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "rgba(0, 0, 0, 0.1)",
                  "flex": 1,
                  "padding": 5,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={2}
                style={
                  Object {
                    "fontSize": 16,
                    "fontWeight": "500",
                  }
                }
              >
                aa
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "color": "#9E9E9E",
                    "fontSize": 12,
                  }
                }
              >
                bb
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Storyshots LibraryStatus with loading 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "blue",
        }
      }
    >
      bar
    </Text>
    <ActivityIndicator
      animating={true}
      color="#999999"
      hidesWhenStopped={true}
      size="small"
      style={
        Object {
          "marginLeft": 5,
        }
      }
    />
  </View>
</View>
`;

exports[`Storyshots LibraryStatus with text and color 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "red",
        }
      }
    >
      foo
    </Text>
  </View>
</View>
`;

exports[`Storyshots Main cycle 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
    ]
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "column-reverse",
        },
        Object {
          "backgroundColor": "#000",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "#E9E9EF",
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 5,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#393e42",
                    "borderBottomColor": "#000",
                    "borderBottomWidth": 1,
                    "borderTopColor": "#000",
                    "borderTopWidth": 1,
                  },
                  Object {
                    "backgroundColor": "#e1e8ee",
                    "borderBottomColor": "#e1e1e1",
                    "borderTopColor": "#e1e1e1",
                  },
                  Object {
                    "backgroundColor": "#fafafa",
                    "flex": 1,
                  },
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                onChangeText={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Type Here..."
                placeholderTextColor="#86939e"
                style={
                  Array [
                    Object {
                      "backgroundColor": "#303337",
                      "borderRadius": 3,
                      "color": "#86939e",
                      "fontSize": 17.5,
                      "height": 30,
                      "margin": 8,
                      "overflow": "hidden",
                      "paddingLeft": 26,
                      "paddingRight": 19,
                    },
                    Object {
                      "backgroundColor": "#bdc6cf",
                    },
                    false,
                    false,
                    Object {
                      "backgroundColor": "#eeeeee",
                    },
                    undefined,
                    false,
                  ]
                }
                underlineColorAndroid="transparent"
                value={null}
              />
              <Text
                accessible={true}
                allowFontScaling={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#86939e",
                      "fontSize": 16,
                    },
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "position": "absolute",
                        "top": 15.5,
                      },
                      Object {
                        "left": 16,
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 20,
                  },
                  Object {
                    "alignSelf": "center",
                    "padding": 10,
                  },
                  Object {
                    "fontFamily": "awesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#f5f5f5",
                  "borderColor": "#e3e3e3",
                  "borderRadius": 3,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 40,
                  "marginBottom": 5,
                  "marginLeft": 10,
                  "marginRight": 10,
                  "marginTop": 5,
                  "overflow": "hidden",
                },
                Object {
                  "height": 30,
                },
              ]
            }
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Array [
                    Object {
                      "flex": 1,
                    },
                    Object {
                      "borderRightColor": "#bdc6cf",
                      "borderRightWidth": 0,
                    },
                    false,
                    false,
                    Object {
                      "borderBottomLeftRadius": 3,
                      "borderTopLeftRadius": 3,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                  ],
                ]
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {},
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      Array [
                        Object {
                          "color": "#5e6977",
                          "fontSize": 16.25,
                          "fontWeight": "500",
                        },
                        undefined,
                        Object {
                          "color": "#43484d",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  全て
                </Text>
              </View>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Array [
                    Object {
                      "flex": 1,
                    },
                    Object {
                      "borderRightColor": "#bdc6cf",
                      "borderRightWidth": 1,
                    },
                    Object {
                      "borderLeftColor": "#bdc6cf",
                      "borderLeftWidth": 1,
                    },
                    false,
                    false,
                    false,
                  ],
                ]
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {},
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      Array [
                        Object {
                          "color": "#5e6977",
                          "fontSize": 16.25,
                          "fontWeight": "500",
                        },
                        undefined,
                        false,
                        false,
                      ],
                    ]
                  }
                >
                  蔵書あり
                </Text>
              </View>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Array [
                    Object {
                      "flex": 1,
                    },
                    false,
                    false,
                    Object {
                      "borderBottomRightRadius": 3,
                      "borderTopRightRadius": 3,
                    },
                    false,
                    false,
                  ],
                ]
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {},
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      Array [
                        Object {
                          "color": "#5e6977",
                          "fontSize": 16.25,
                          "fontWeight": "500",
                        },
                        undefined,
                        false,
                        false,
                      ],
                    ]
                  }
                >
                  貸出可
                </Text>
              </View>
            </View>
          </View>
          <RCTScrollView
            data={Array []}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            keyboardShouldPersistTaps="handled"
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
    <View
      cardStyle={undefined}
      collapsable={undefined}
      getScreenDetails={[Function]}
      headerMode={undefined}
      index={0}
      layout={
        Object {
          "height": 0,
          "initHeight": 0,
          "initWidth": 0,
          "isMeasured": false,
          "width": 0,
        }
      }
      mode="float"
      navigation={
        Object {
          "dispatch": [Function],
          "goBack": [Function],
          "navigate": [Function],
          "setParams": [Function],
          "state": Object {
            "index": 0,
            "routes": Array [
              Object {
                "key": "Init-id-1513276169582-0",
                "routeName": "Home",
              },
            ],
          },
        }
      }
      router={
        Object {
          "getActionForPathAndParams": [Function],
          "getComponentForRouteName": [Function],
          "getComponentForState": [Function],
          "getPathAndParamsForState": [Function],
          "getScreenConfig": [Function],
          "getScreenOptions": [Function],
          "getStateForAction": [Function],
        }
      }
      transitionConfig={undefined}
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "backgroundColor": "#F7F7F7",
            "borderBottomColor": "rgba(0, 0, 0, .3)",
            "borderBottomWidth": 0.5,
            "height": 64,
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              collapsable={undefined}
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "opacity": 1,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <Text
                accessibilityTraits="header"
                accessible={true}
                allowFontScaling={true}
                collapsable={undefined}
                ellipsizeMode="tail"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgba(0, 0, 0, .9)",
                    "fontSize": 17,
                    "fontWeight": "600",
                    "marginHorizontal": 16,
                    "textAlign": "center",
                  }
                }
              >
                Search
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots SearchBar with loading 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#393e42",
        "borderBottomColor": "#000",
        "borderBottomWidth": 1,
        "borderTopColor": "#000",
        "borderTopWidth": 1,
      },
      Object {
        "backgroundColor": "#e1e8ee",
        "borderBottomColor": "#e1e1e1",
        "borderTopColor": "#e1e1e1",
      },
      undefined,
    ]
  }
>
  <TextInput
    allowFontScaling={true}
    onChangeText={[Function]}
    onClearText={[Function]}
    placeholder="Type Here..."
    placeholderTextColor="#86939e"
    style={
      Array [
        Object {
          "backgroundColor": "#303337",
          "borderRadius": 3,
          "color": "#86939e",
          "fontSize": 17.5,
          "height": 30,
          "margin": 8,
          "overflow": "hidden",
          "paddingLeft": 26,
          "paddingRight": 19,
        },
        Object {
          "backgroundColor": "#bdc6cf",
        },
        false,
        false,
        undefined,
        undefined,
        Object {
          "paddingRight": 30,
        },
      ]
    }
    underlineColorAndroid="transparent"
  />
  <Text
    accessible={true}
    allowFontScaling={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#86939e",
          "fontSize": 16,
        },
        Array [
          Object {
            "backgroundColor": "transparent",
            "position": "absolute",
            "top": 15.5,
          },
          Object {
            "left": 16,
          },
          undefined,
        ],
        Object {
          "fontFamily": "Material Icons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
  >
    
  </Text>
  <ActivityIndicator
    animating={true}
    color="#86939e"
    hidesWhenStopped={true}
    size="small"
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "position": "absolute",
          "right": 16,
          "top": 13,
        },
        undefined,
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots SearchHistory with plane 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "query": "foo",
      },
      Object {
        "query": "bar",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  keyboardShouldPersistTaps="handled"
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#fafafa",
                "flexDirection": "row",
              },
              Object {
                "borderBottomWidth": 0.5,
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "flex": 1,
                "padding": 5,
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 16,
                },
                Object {
                  "alignSelf": "center",
                  "margin": 5,
                },
                Object {
                  "fontFamily": "awesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignSelf": "center",
                "margin": 5,
              }
            }
          >
            foo
          </Text>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#fafafa",
                "flexDirection": "row",
              },
              Object {
                "borderBottomWidth": 0.5,
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "flex": 1,
                "padding": 5,
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 16,
                },
                Object {
                  "alignSelf": "center",
                  "margin": 5,
                },
                Object {
                  "fontFamily": "awesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignSelf": "center",
                "margin": 5,
              }
            }
          >
            bar
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots SearchScene with class 1`] = `
<View>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#393e42",
            "borderBottomColor": "#000",
            "borderBottomWidth": 1,
            "borderTopColor": "#000",
            "borderTopWidth": 1,
          },
          Object {
            "backgroundColor": "#e1e8ee",
            "borderBottomColor": "#e1e1e1",
            "borderTopColor": "#e1e1e1",
          },
          Object {
            "backgroundColor": "#fafafa",
            "flex": 1,
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        onSubmitEditing={undefined}
        placeholder="Type Here..."
        placeholderTextColor="#86939e"
        style={
          Array [
            Object {
              "backgroundColor": "#303337",
              "borderRadius": 3,
              "color": "#86939e",
              "fontSize": 17.5,
              "height": 30,
              "margin": 8,
              "overflow": "hidden",
              "paddingLeft": 26,
              "paddingRight": 19,
            },
            Object {
              "backgroundColor": "#bdc6cf",
            },
            false,
            false,
            Object {
              "backgroundColor": "#eeeeee",
            },
            undefined,
            false,
          ]
        }
        underlineColorAndroid="transparent"
        value={null}
      />
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#86939e",
              "fontSize": 16,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "position": "absolute",
                "top": 15.5,
              },
              Object {
                "left": 16,
              },
              undefined,
            ],
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 20,
          },
          Object {
            "alignSelf": "center",
            "padding": 10,
          },
          Object {
            "fontFamily": "awesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#f5f5f5",
          "borderColor": "#e3e3e3",
          "borderRadius": 3,
          "borderWidth": 1,
          "flexDirection": "row",
          "height": 40,
          "marginBottom": 5,
          "marginLeft": 10,
          "marginRight": 10,
          "marginTop": 5,
          "overflow": "hidden",
        },
        Object {
          "height": 30,
        },
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "borderRightColor": "#bdc6cf",
              "borderRightWidth": 0,
            },
            false,
            false,
            Object {
              "borderBottomLeftRadius": 3,
              "borderTopLeftRadius": 3,
            },
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                false,
                false,
              ],
            ]
          }
        >
          全て
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "borderRightColor": "#bdc6cf",
              "borderRightWidth": 1,
            },
            Object {
              "borderLeftColor": "#bdc6cf",
              "borderLeftWidth": 1,
            },
            false,
            false,
            Object {
              "backgroundColor": "white",
            },
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                Object {
                  "color": "#43484d",
                },
                undefined,
              ],
            ]
          }
        >
          蔵書あり
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            false,
            false,
            Object {
              "borderBottomRightRadius": 3,
              "borderTopRightRadius": 3,
            },
            false,
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                false,
                false,
              ],
            ]
          }
        >
          貸出可
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={undefined}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    keyboardShouldPersistTaps="handled"
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`Storyshots SearchScene with no items 1`] = `
<View>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#393e42",
            "borderBottomColor": "#000",
            "borderBottomWidth": 1,
            "borderTopColor": "#000",
            "borderTopWidth": 1,
          },
          Object {
            "backgroundColor": "#e1e8ee",
            "borderBottomColor": "#e1e1e1",
            "borderTopColor": "#e1e1e1",
          },
          Object {
            "backgroundColor": "#fafafa",
            "flex": 1,
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Type Here..."
        placeholderTextColor="#86939e"
        style={
          Array [
            Object {
              "backgroundColor": "#303337",
              "borderRadius": 3,
              "color": "#86939e",
              "fontSize": 17.5,
              "height": 30,
              "margin": 8,
              "overflow": "hidden",
              "paddingLeft": 26,
              "paddingRight": 19,
            },
            Object {
              "backgroundColor": "#bdc6cf",
            },
            false,
            false,
            Object {
              "backgroundColor": "#eeeeee",
            },
            undefined,
            false,
          ]
        }
        underlineColorAndroid="transparent"
        value={null}
      />
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#86939e",
              "fontSize": 16,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "position": "absolute",
                "top": 15.5,
              },
              Object {
                "left": 16,
              },
              undefined,
            ],
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      onPress={[Function]}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 20,
          },
          Object {
            "alignSelf": "center",
            "padding": 10,
          },
          Object {
            "fontFamily": "awesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#f5f5f5",
          "borderColor": "#e3e3e3",
          "borderRadius": 3,
          "borderWidth": 1,
          "flexDirection": "row",
          "height": 40,
          "marginBottom": 5,
          "marginLeft": 10,
          "marginRight": 10,
          "marginTop": 5,
          "overflow": "hidden",
        },
        Object {
          "height": 30,
        },
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "borderRightColor": "#bdc6cf",
              "borderRightWidth": 0,
            },
            false,
            false,
            Object {
              "borderBottomLeftRadius": 3,
              "borderTopLeftRadius": 3,
            },
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                false,
                false,
              ],
            ]
          }
        >
          全て
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "borderRightColor": "#bdc6cf",
              "borderRightWidth": 1,
            },
            Object {
              "borderLeftColor": "#bdc6cf",
              "borderLeftWidth": 1,
            },
            false,
            false,
            Object {
              "backgroundColor": "white",
            },
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                Object {
                  "color": "#43484d",
                },
                undefined,
              ],
            ]
          }
        >
          蔵書あり
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            false,
            false,
            Object {
              "borderBottomRightRadius": 3,
              "borderTopRightRadius": 3,
            },
            false,
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                false,
                false,
              ],
            ]
          }
        >
          貸出可
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "query": "foo",
        },
        Object {
          "query": "bar",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    keyboardShouldPersistTaps="handled"
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                },
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "rgba(0, 0, 0, 0.1)",
                  "flex": 1,
                  "padding": 5,
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 16,
                  },
                  Object {
                    "alignSelf": "center",
                    "margin": 5,
                  },
                  Object {
                    "fontFamily": "awesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "alignSelf": "center",
                  "margin": 5,
                }
              }
            >
              foo
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                },
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "rgba(0, 0, 0, 0.1)",
                  "flex": 1,
                  "padding": 5,
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 16,
                  },
                  Object {
                    "alignSelf": "center",
                    "margin": 5,
                  },
                  Object {
                    "fontFamily": "awesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "alignSelf": "center",
                  "margin": 5,
                }
              }
            >
              bar
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Storyshots SearchScene with plane 1`] = `
<View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#393e42",
          "borderBottomColor": "#000",
          "borderBottomWidth": 1,
          "borderTopColor": "#000",
          "borderTopWidth": 1,
        },
        Object {
          "backgroundColor": "#e1e8ee",
          "borderBottomColor": "#e1e1e1",
          "borderTopColor": "#e1e1e1",
        },
        Object {
          "backgroundColor": "#fafafa",
        },
      ]
    }
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      onClearText={[Function]}
      placeholder="Type Here..."
      placeholderTextColor="#86939e"
      style={
        Array [
          Object {
            "backgroundColor": "#303337",
            "borderRadius": 3,
            "color": "#86939e",
            "fontSize": 17.5,
            "height": 30,
            "margin": 8,
            "overflow": "hidden",
            "paddingLeft": 26,
            "paddingRight": 19,
          },
          Object {
            "backgroundColor": "#bdc6cf",
          },
          false,
          false,
          Object {
            "backgroundColor": "#eeeeee",
          },
          undefined,
          Object {
            "paddingRight": 30,
          },
        ]
      }
      underlineColorAndroid="transparent"
    />
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#86939e",
            "fontSize": 16,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
              "position": "absolute",
              "top": 15.5,
            },
            Object {
              "left": 16,
            },
            undefined,
          ],
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
    <ActivityIndicator
      animating={true}
      color="#86939e"
      hidesWhenStopped={true}
      size="small"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "position": "absolute",
            "right": 16,
            "top": 13,
          },
          undefined,
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#f5f5f5",
          "borderColor": "#e3e3e3",
          "borderRadius": 3,
          "borderWidth": 1,
          "flexDirection": "row",
          "height": 40,
          "marginBottom": 5,
          "marginLeft": 10,
          "marginRight": 10,
          "marginTop": 5,
          "overflow": "hidden",
        },
        Object {
          "height": 30,
        },
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "borderRightColor": "#bdc6cf",
              "borderRightWidth": 0,
            },
            false,
            false,
            Object {
              "borderBottomLeftRadius": 3,
              "borderTopLeftRadius": 3,
            },
            Object {
              "backgroundColor": "white",
            },
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                Object {
                  "color": "#43484d",
                },
                undefined,
              ],
            ]
          }
        >
          全て
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "borderRightColor": "#bdc6cf",
              "borderRightWidth": 1,
            },
            Object {
              "borderLeftColor": "#bdc6cf",
              "borderLeftWidth": 1,
            },
            false,
            false,
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                false,
                false,
              ],
            ]
          }
        >
          蔵書あり
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            false,
            false,
            Object {
              "borderBottomRightRadius": 3,
              "borderTopRightRadius": 3,
            },
            false,
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                false,
                false,
              ],
            ]
          }
        >
          貸出可
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "author": "author foo",
          "bucket": "liked",
          "isbn": "9784834032147",
          "thumbnail": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
          "title": "guri & gura",
        },
      ]
    }
    disableVirtualization={false}
    extraData={undefined}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={undefined}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "height": 83,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "flexDirection": "row",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "uri": "http://thumbnail.image.rakuten.co.jp/@0_mall/book/cabinet/2147/9784834032147.jpg?_ex=200x200",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#dddddd",
                    "height": 64,
                    "margin": 10,
                    "width": 64,
                  }
                }
              />
              <View
                style={
                  Object {
                    "borderBottomWidth": 0.5,
                    "borderColor": "rgba(0, 0, 0, 0.1)",
                    "borderTopWidth": 0.5,
                    "flex": 1,
                    "marginRight": 10,
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 20,
                        },
                        Object {
                          "color": "#03a9f4",
                          "marginRight": 10,
                        },
                        Object {
                          "fontFamily": "awesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Object {
                        "flex": 1,
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                  >
                    guri & gura
                  </Text>
                </View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#9E9E9E",
                      "fontSize": 12,
                    }
                  }
                >
                  author foo
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={undefined}
                  >
                    蔵書確認中
                  </Text>
                  <ActivityIndicator
                    animating={true}
                    color="#999999"
                    hidesWhenStopped={true}
                    size="small"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
